version: '3.8'

services:
  front_helper:
    build:
      context: ../frontend/
      dockerfile: ../frontend/Dockerfile
    volumes:
      - ../static:/src/static
    entrypoint:  ["sh", "-c", "cp -a /src/bundles/* /src/static/"]

  back_helper:
    build:
      context: ../backend/
      dockerfile: ../backend/Dockerfile
    image: app_image
    volumes:
      - ../static:/src/static
    entrypoint: ["sh", "-c", "cp -a /src/staticfiles/* /src/static/"]

  db:
    image: postgres
    restart: always
    env_file:
      - ../backend/src/star_burger/.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data

  app:
    image: app_image
    restart: always
    volumes:
      - ../media:/src/media
    depends_on:
      front_helper:
        condition: service_completed_successfully
      back_helper:
        condition: service_completed_successfully
      db:
        condition: service_healthy
    ports:
      - 8090:8090
    entrypoint: gunicorn -w 3 -b 0.0.0.0:8090 star_burger.wsgi:application

volumes:
  pgdata:
